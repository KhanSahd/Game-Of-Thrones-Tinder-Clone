{"ast":null,"code":"var _jsxFileName = \"/Users/sahd/projects/tinder-clode/src/TinderCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport database from \"./firebase\";\nimport TinderCard from \"react-tinder-card\";\nimport \"./TinderCards.css\";\nimport { collection, doc, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TinderCards() {\n  _s();\n\n  // useState is basically like declaring an array in REACT.\n  const [people, setPeople] = useState([]); // Use Effect is basically a if statement for React. It runs a piece of code based on a condition\n\n  useEffect(() => {\n    const colRef = collection(database, \"people\");\n    getDocs(colRef).then(snapshot => {\n      setPeople(snapshot.docs.map(doc => doc.data()));\n    });\n  }, [people]); // BAD\n  // const people = [];\n  // people.push(\"Sahd\", \"Kobe\");\n  // GOOD\n  // setPeople([...people, \"Sahd\", \"Kobe\"]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tinderCards__cardContainer\",\n      children: people.map(person => {\n        return /*#__PURE__*/_jsxDEV(TinderCard, {\n          className: \"swipe\",\n          preventSwipe: [\"up\", \"down\"],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundImage: `url(${person.url})`\n            },\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: person.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, person.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TinderCards, \"iLHt2u73MC8pQH7JexuLSo07ahk=\");\n\n_c = TinderCards;\nexport default TinderCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"TinderCards\");","map":{"version":3,"names":["React","useEffect","useState","database","TinderCard","collection","doc","getDocs","TinderCards","people","setPeople","colRef","then","snapshot","docs","map","data","person","backgroundImage","url","name"],"sources":["/Users/sahd/projects/tinder-clode/src/TinderCards.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport database from \"./firebase\";\nimport TinderCard from \"react-tinder-card\";\nimport \"./TinderCards.css\";\nimport { collection, doc, getDocs } from \"firebase/firestore\";\n\nfunction TinderCards() {\n  // useState is basically like declaring an array in REACT.\n  const [people, setPeople] = useState([]);\n\n  // Use Effect is basically a if statement for React. It runs a piece of code based on a condition\n  useEffect(() => {\n    const colRef = collection(database, \"people\");\n    getDocs(colRef).then((snapshot) => {\n      setPeople(snapshot.docs.map((doc) => doc.data()));\n    });\n  }, [people]);\n\n  // BAD\n  // const people = [];\n  // people.push(\"Sahd\", \"Kobe\");\n\n  // GOOD\n  // setPeople([...people, \"Sahd\", \"Kobe\"]);\n\n  return (\n    <div>\n      <div className=\"tinderCards__cardContainer\">\n        {people.map((person) => {\n          return (\n            <TinderCard\n              className=\"swipe\"\n              key={person.name}\n              preventSwipe={[\"up\", \"down\"]}\n            >\n              <div\n                style={{ backgroundImage: `url(${person.url})` }}\n                className=\"card\"\n              >\n                <h3>{person.name}</h3>\n              </div>\n            </TinderCard>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default TinderCards;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAO,mBAAP;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,OAA1B,QAAyC,oBAAzC;;;AAEA,SAASC,WAAT,GAAuB;EAAA;;EACrB;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC,CAFqB,CAIrB;;EACAD,SAAS,CAAC,MAAM;IACd,MAAMU,MAAM,GAAGN,UAAU,CAACF,QAAD,EAAW,QAAX,CAAzB;IACAI,OAAO,CAACI,MAAD,CAAP,CAAgBC,IAAhB,CAAsBC,QAAD,IAAc;MACjCH,SAAS,CAACG,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBT,GAAD,IAASA,GAAG,CAACU,IAAJ,EAA3B,CAAD,CAAT;IACD,CAFD;EAGD,CALQ,EAKN,CAACP,MAAD,CALM,CAAT,CALqB,CAYrB;EACA;EACA;EAEA;EACA;;EAEA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,4BAAf;MAAA,UACGA,MAAM,CAACM,GAAP,CAAYE,MAAD,IAAY;QACtB,oBACE,QAAC,UAAD;UACE,SAAS,EAAC,OADZ;UAGE,YAAY,EAAE,CAAC,IAAD,EAAO,MAAP,CAHhB;UAAA,uBAKE;YACE,KAAK,EAAE;cAAEC,eAAe,EAAG,OAAMD,MAAM,CAACE,GAAI;YAArC,CADT;YAEE,SAAS,EAAC,MAFZ;YAAA,uBAIE;cAAA,UAAKF,MAAM,CAACG;YAAZ;cAAA;cAAA;cAAA;YAAA;UAJF;YAAA;YAAA;YAAA;UAAA;QALF,GAEOH,MAAM,CAACG,IAFd;UAAA;UAAA;UAAA;QAAA,QADF;MAcD,CAfA;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD;;GAzCQZ,W;;KAAAA,W;AA2CT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}